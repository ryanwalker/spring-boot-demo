buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
    }
}
plugins {
    id 'java'
    //Allows us to not specify versions for dependencies. Pulls in MAVEN BOMs (Bill of Materials)
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

repositories {
    mavenLocal()
    mavenCentral()
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-eclipse'
}

dependencies {
    // IDE metadata dependencies
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // REST dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Actuator dependencies
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Security dependencies
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Database dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'com.h2database:h2'
    implementation 'org.flywaydb:flyway-core'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'

    // GraphQL dependencies
    implementation 'com.graphql-java:graphql-java-tools:5.2.4'
    implementation 'com.graphql-java:graphql-spring-boot-starter:5.0.2'
}

// Gradle and IDEA are not playing nice with configuration metadata
task copyConfigurationMetadata(type: Copy) {
    from(compileJava) {
        include 'META-INF/spring-configuration-metadata.json'
    }
    into "out/production/classes"
}
compileJava.dependsOn(processResources)
compileJava.finalizedBy(copyConfigurationMetadata)

group = 'com.kubra'
version = '0.0.1-SNAPSHOT'
description = 'spring-boot-demo'
sourceCompatibility = '1.8'


// Configure SpringBoot plugin
bootRun {
    // Allows debugging
    jvmArgs = [
            "-Dspring.output.ansi.enabled=ALWAYS", // Prints in color
            "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005" // Exposes debug port
    ]
}